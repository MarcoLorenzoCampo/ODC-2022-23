#creat the firt.bin file with the unpacked code by running the file until the unpacked code function call (break point at b *0x804928a)
#and there use the command => dump binary memory first.bin $eax ($eax + (4*0x53))

#The run this python script to obtain the patched unpacked file. (It has to be adjusted since it does not work)
from pwn import *

f = open("./john","rb")
old = f.read()
f.close()
f = open("./first.bin","rb")
first = f.read()
f.close()
base_offset = 0x170e #offset between main and binary in order to keep things aligned
new = old[:base_offset] + first + old[base_offset + (0x53*4):]
f = open("john_patched", "wb")
f.write(new)
f.close()


#This script is useful to create a binary with the assembly code in order to read it outside of gdb if necessary.
"""from pwn import *
f = open("./first.bin","rb")
content = f.read()
f.close()
print(disasm(content))"""

#address to stop before the if 0x8049821
